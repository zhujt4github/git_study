1. Git安装后需要设置一下用户
	$ git config --global user.name "Your Name"
	$ git config --global user.email "email@example.com"
2. 创建版本库 (请确保目录名（包括父目录）不包含中文。)
	$ mkdir git_study
	$ cd git_study
!	$ git_init
3. 把文件添加到版本库
	所有的版本控制系统，其实只能跟踪文本文件的改动。
	第一步，把文件添加到仓库
!	$ git add readme.txt
	第二步，把文件提交到仓库
!	$ git commit -m <message>
4. 运行 git status 查看结果
!	$ git status
5. 运行 git diff filename 查看文件的变动
!	$ git diff readme.txt
6. 运行 git log 查看变动历史
	如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
!	git log
7. 	版本回退
	$ git reset --hard HEAD^  回退到上一个版本
	$ git reset --hard HEAD^^ 回退到上上个版本
	$ git reset --hard HEAD~n 回退往上的到第n个版本
!	$ git reset --hard commit id 回退到commit id的版本，可以使前几个字符。
	
	Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：
		┌────┐
		│HEAD│
		└────┘
		   │
		   └──> ○ append GPL
				│
				○ add distributed
				│
				○ wrote a readme file

		改为指向add distributed：

		┌────┐
		│HEAD│
		└────┘
		   │
		   │    ○ append GPL
		   │    │
		   └──> ○ add distributed
				│
				○ wrote a readme file

8. 查看命令的历史记录
!	$ git reflog
	
9. 工作区和暂存区
	工作区 就是电脑里的一个目录
	暂存区 工作区里有一个.git目录，这是Git的版本库。版本库里最重要的东西成为stage的暂存区，
		   还有Git创建的第一个分支master，以及指向master的指针叫做HEAD。
		   
	前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：

	第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

	第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

	因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。

	你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。
	
	git diff    		#是工作区(work dict)和暂存区(stage)的比较
	git diff --cached	#是暂存区(stage)和分支(master)的比较
	
10. 撤销修改

	场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

	场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，
			分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

	场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
	
11. 删除文件
	